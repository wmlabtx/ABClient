<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorTorg.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAACACoCAAAJgAAABAQAAAAAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAP///wD8/PwA0NT8AOzs/ADAwPwAQED8APj4/AD09PwAICD8ACws
        /ADo6PwAoKD8AAAA/ADc3OAAYGD8ALi4/ABkZGQAbGxwAFBQ+ABYWPwAsLD8AISE/ABoaGgAaGhsAGxs
        +ADExPwA4OD8AHh4/AD09PQAVFRUAAQEBABQUFQArKz4ADg4/ABwcPwA8PDwAERERAAkJCQAEBAQADQ0
        NAAwMPwABAD8AIiM/AC8vPwAXFj8AOjo6AAMDAwAKCgoABwcHAAUFBQAwMDEAJiY+AAAFPwAAAz8AAgI
        /ADU1PgASEj8AExI/AD09PgA2NjYACAgIACIiIgA/Pz4ADg8/AAAGPwABDT8AAAQ/ABUVPgA/Pz0ALCw
        +AAEOPwAODT8AOjo+ADMzMwAMDAwALS0tACoqKgAQEBAALy09AAATPwAABz8ALiw9ADw7PQALDz8AAAw
        /AAEVPwAADT8ACww/ADc2PQAvLy8ABgYGAAsLCwArKysALi4uAD8/OwAXFz4AABA/AAEdPwAADj8AFBU
        +AAcKPwA1ND0ADg4OAA8PDwA4ODgAOTk5ADU0PAADCD8AAAk/AAIDPwAxMDwAICA9AAEBPwAjIjwAAAI
        /AAUFPwAxMTwAPj4+ABQUFAACAgIAJSUlAB4dPQABCD8AHx89AD8/OgAeHj0AFBQ9ACMkPAASEj4AHR0
        dABYWFgAnJycAJCQkADc3OgAGCD4AAAg/ABAQPgA+PjoALy86ADw8OwA0NDsACws+AAABPwAnJjwAHh4
        eADU1NQAmJiYAHh48AAALPwAEBz4ANjU6ADIxOgAGBj4AAAo/AAECPwAnJzsAICAgABcXFwA5OToAMjA
        5AAMHPwAyMTkAMC86AAMEPgAqKjoAHBwcAD49NwATFDwAGBY8AAQIPgAEBT4ALi05ACkpKQAfHx8AISE
        hACIhOgAGBz0AMTA5ACwsLAAsKjYAAgo8AAAUPwABFz8AAA8+AAkKOgAzMjcAMjMyADc2OAAIDTYAABk
        /AAAPPQALDDUANTQ3ADs7OwAhISIAPj07AA4RMwAACjoADw8yADc3NgA0NDQAMjIyABcYGAA/PzwADA0
        tAA8OLgA6OTcAMDAwABgYGAAkJC4AP7+/gDS1P4A7u7+AMDA/gD4+P4AIiL8ACws/gD+/vwA/Pz+AOjo
        /gCiov4AAAD+ACIi/gC6uvwAZmZmAFBQ+gBaWv4AsrL8AIaG/ABqam4AbGz6AAIC/gDExP4A4OD+AHp6
        /gD29vYArq76APr6/gBYWP4AcHD+APLy8gACAgIA9vb+ADAy/AAEAv4Aioz8AAAC/gBeWv4ABgYGAB4e
        HgDCwsQAmpr4AAIU/gAADv4ACgr+AB8fHx8fHx8fHx8fHx8fH5LCHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fTHkdHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx/7MoQfHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fH/smKJIfHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fhChcrx/EHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fkvsfHx/mJlwRAtIOHx8fHx8fHx8fHx8fHx8fHx8fH5JoXR8fSiYmLxFFzc7PHx8f
        Hx8fHx8fHx8fHx8fHx9KJiYdHwLmHzIfPsTFtccOHx8fHx8fHx8fHx8fHx8fWjEfrx8fTC8fHzJKDr2+
        v8DBHx8fHx8fHx8fHx8fH0wyHzEOH8IoHx8fngK0tVa3Ybm6Hx8fHx8fHx8fHx9dLx8frh8frx8fHy/7
        H3JtRzZWR2WiHx8fHx8fHx8ChB8fHzJKHw4yHx8fgh+nREJtqYdHR3SsHx8fHx8fAq8fHx8fngIfgh8f
        HybCH5ihR/2Yb3RCQv+lHx8fHwKuLygmLx95Hw4xHx8fhB8ffDZCh5dfmAlRlTacXx8CgjGeJSVaH4Qf
        eTIxHyUCH4Zlbf0GX4vEawpRbXH8XwIoaB4vXQLmhAIeKB4xTB8fenFtcXxffERfgHFtcTpfAl0xaGgx
        WgJqwlwlXB4CHzhsbTb/dR9w/3JxNjZ0dR8fH/sxKCgyTAJaMiUyTB9F42FiR0RFH+dx/UdCZTgfHx8f
        H0oxJigfTF0yXCUdH0/9UFBRTx9TVEJWQlhZHx8fHx8fHw5cMlwxKCYvPh8CQFFC/UQCH+Q2R/1IBB8f
        Hx8fHx8fH8IoL1wfMTL7H/xx/Tb/1B8COnFxOggfHx8fHx8fHx8fHx0lHyYyKB0CSHFxcfYfHyxxceMC
        Hx8fHx8fHx8fHx8fHx0eHx8eAuRxcXFAAh8C43EcAh8fHx8fHx8fHx8fHx8fHwLmH+YC53FxcRofHwtx
        6wIfHx8fHx8fHx8fHx8fHx8fHwIREgJEcXHjAh8f5BYCHx8fHx8fHx8fHx8fHx8fHx8fHwIOAg9xcSwf
        Hx8CAh8fHx8fHx8fHx8fHx8fHx8fHx8fHwIE3XHYBB8fHwIfHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8I
        2AoCHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8aBgIfHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx/UBB8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHwICHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHwIfHx8fHx8fHx8fHx8fHx///n////4////+P////h////4X///OA///jAH//wgA//4Y
        AH/8EAA/+DAgH+AgQA/AIEAHgEDAAQBAgAAAAYAAAAECAcACAgPgAgQH8AQED/gECB/8ABg//gAQf/8A
        MP//gDH//8Bz///gd///+H////x////+f////n////9//ygAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAA
        AAAAAAAAAAEAAAAAAAAAAAAA////APT1/QDt7v0AdnPzAOvr/QDNzPcAEAjrAOPi/ADm5eYAcHBhAL68
        7wACAO4AiYXzAI6M8wDZ2PkA5eXlAEE/QAAvLikA5OXqADAp9AAWCuoA7uv5ALe29QAcFeoA4974AN7e
        3wBFQ0QALCorADQyMwDY18MAnp7+AAAY7ABkb+8A///6ADZD7QAfPO0A3Nn2ANjY2QBJR0cAR0VFAMLB
        wgBHRUYAh4aAACpg7wAGT/AA4dv0AKqu8gAAI+8AJEvtANfU9ADIx8gAV1VVAFFOTwDGxcYA7ezsAG5s
        bABNSksA+PjlAKuv+QAAGO0AhIfuAMnE8ACEeOgALjztACIy7ADOyewA19bXAGpoaQBPTU0AV1ZZALy7
        vACmpaUABwYHAIGAfAApP+sAMkvtAPvy5wC5t+kAEDHuAENS6gDe2e8A7u3tAEhHSgCKiYsA8fHxABAP
        EgASERUA7OrZAJOg+gAXP+0AmZPmAAc88QBAWOkA8u30APT09ABEQ0UAExEVAIWEhgBycGYA3tv8ABlO
        7gAAQPEARGHjAPXu8wD6+vkAOTc6AIuKiwD9/fwALCsuAB4dHADOxcsAHVnoAEFo2QD37e8A8PDwAJCP
        jwCko6MAMC4sAKOhpQB8ftAA8u3vAOPi4gA/PD4AxcXFAP///ADk4+MAf31/AP7+/QDo6OgA0wAAAP//
        /wDUAAAA////ANUAAAD///8A1gAAAP///wDXAAAA////ANgAAAD+//8A2QAAAP7//wDaAAAA/v//ANsA
        AAD+//8A3AAAAP7//wDdAAAA/v//AN4AAAD///8A3wAAAP///wDgAAAA////AOEAAAD///8A4gAAAP//
        /wDlAAAAAQAAAOYAAAABAAAA5wAAAAIAAADoAAAAAgAAAOkAAAADAAAA6gAAAAQAAADrAAAABAAAAOwA
        AAAFAAAA7QAAAAYAAADuAAAABgAAAO8AAAAHAAAA8AAAAAgAAADxAAAACAAAAPIAAAAJAAAA8wAAAAkA
        AAD0AAAACgAAAPUAAAAKAAAA9gAAAAsAAAD3AAAACwAAAPgAAAALAAAA+QAAAAsAAAD6AAAACwAAAPsA
        AAALAAAA/AAAAAsAAAD9AAAACwAAAP4AAAALAAAA/wAAAAoAAAAAAQAACgAAAAEBAAAJAAAAAgEAAAkA
        AAADAQAACAAAAAQBAAAIAAAABQEAAAcAAAAGAQAABgAAAAcBAAAGAAAACAEAAAUAAAAJAQAABAAAAAoB
        AAAEAAAACwEAAAMAAAAMAQAAAgAAAA0BAAACAAAADgEAAAEAAAAPAQAAAQAAABMBAAD///8AFAEAAP//
        /wAVAQAA////ABYBAAD///8AAAAAAAAAAIEAAAAAAAAAAAAAAAAAAAB+f4AAAAAAAAAAAAAAAAABent8
        fQAAAAAAAAAAAHN0AXV2d3h5AAAAAAAAAGlqa2xtbm9wcXIAAAAAAF9gYQFiAGNkZWZnaAAAAFJTAFRV
        VldYWVpbXF1eAENERUZHSElKAUtMTU5PUFEzNDU2Nzg5Ojs8PT4/QEFCACYnKCkqKwEsLS4vMDEyAAAA
        GhscHR4fICEiIyQlAAAAAAAQERITFBUWFxgZAAAAAAAAAAkKCwwNAQ4PAAAAAAAAAAAAAAYHCAAAAAAA
        AAAAAAAAAAAABAUAAAAAAAAAAAAAAAAAAAIDAAAAAAAAAP7/AAD+PwAA/B8AAPAPAADgBwAAwAMAAIAB
        AAAAAAAAAAAAAIABAADAAwAA4AcAAPAPAAD8fwAA/n8AAP5/AAA=
</value>
  </data>
</root>